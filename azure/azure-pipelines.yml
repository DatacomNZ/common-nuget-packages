# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

# pipeline variables
# Major: 1, Minor: 0, Patch: $[counter(format('{0}.{1}', variables['Major'], variables['Minor']), 0)]
# References: 
# https://kasunkodagoda.com/2019/04/03/hidden-gems-in-azure-pipelines-creating-your-own-rev-variable-using-counter-expression-in-azure-pipelines/

trigger:
- master
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: ''
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# task to run package script if master branch.
- task: PowerShell@2
  inputs:
    filePath: '.\Package.ps1'
    arguments: '-version $(Build.BuildNumber) -outputdirectory $(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

  # task to run package script if develop branch (beta nuget packages).
- task: PowerShell@2
  inputs:
    filePath: '.\Package.ps1'
    arguments: '-version "$(Build.BuildNumber)-beta" -outputdirectory $(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))

  # task to run package script if not develop/master branch (alpha nuget packages).
- task: PowerShell@2
  inputs:
    filePath: '.\Package.ps1'
    arguments: '-version "$(Build.BuildNumber)-alpha" -outputdirectory $(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'develop'))

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Packages'
    publishLocation: 'Container'